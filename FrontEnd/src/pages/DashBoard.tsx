"use client"

import { Link } from "react-router-dom"
import {
  Globe,
  Mail,
  FileText,
  Bot,
  Search,
  Bell,
  User,
  LogOut,
  ChevronRight,
  Shield,
  FileCheck,
  Zap,
  Sparkles,
} from "lucide-react"

import { Button } from "../components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "../components/ui/card"
import { Avatar, AvatarFallback, AvatarImage } from "../components/ui/avatar"
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "../components/ui/dropdown-menu"
import { Badge } from "../components/ui/badge"
import { useEffect, useState } from "react"
import axios from "axios"
import { BACKEND_URL } from "@/config"
import { useNavigate } from "react-router-dom"

const Dashboard = () => {
  const [user, setUser] = useState<{ name: string; username: string } | null>(null)

  const features = [
    {
      id: "Project Authenticator",
      title: "Verify Websites",
      description: "Detect plagiarized content across websites and identify potential copyright infringements.",
      icon: Globe,
      color: "bg-gradient-to-br from-blue-500 to-blue-600",
      stats: "98% accuracy",
      path: "/verify-websites",
    },
    {
      id: "phishing-emails",
      title: "Phishing Emails",
      description: "Identify suspicious emails and protect against phishing attempts with advanced detection.",
      icon: Mail,
      color: "bg-gradient-to-br from-red-500 to-red-600",
      stats: "2,456 threats blocked",
      path: "/phishing-emails",
    },
    {
      id: "verify-documents",
      title: "Verify Documents",
      description: "Check documents for plagiarism against a vast database of academic and published works.",
      icon: FileText,
      color: "bg-gradient-to-br from-green-500 to-green-600",
      stats: "10M+ documents indexed",
      path: "/verify-documents",
    },
    {
      id: "ai-detection",
      title: "AI Content Detection",
      description: "Identify content generated by AI tools like ChatGPT, Bard, and other language models.",
      icon: Bot,
      color: "bg-gradient-to-br from-purple-500 to-purple-600",
      stats: "95% detection rate",
      path: "/ai-detection",
    },
  ]

  useEffect(() => {
    async function fetchUser() {
    try {
        const response = await axios.get(`${BACKEND_URL}/api/v1/verify/getUserData`, {
          headers: {
            Authorization: `${localStorage.getItem("token")}`,
          },
        });
        if (response.status === 200) {
          setUser(response.data); 
        }
      } catch (err) {
        console.error("Error fetching user", err);
      }
    }

    fetchUser();
  }, [])

  const currentTime = new Date().getHours()
  const getGreeting = () => {
    if (currentTime < 12) return "Good morning"
    if (currentTime < 18) return "Good afternoon"
    return "Good evening"
  }

  const navigate = useNavigate()
  const handleLogout = () => {
  localStorage.removeItem('token');
  setUser(null); 
  navigate("/sign-in")
};

  return (
    <div className="flex min-h-screen flex-col bg-gradient-to-br from-[#0c0e16] via-[#0f1119] to-[#13151f]">
      <header className="sticky top-0 z-10 border-b border-gray-800/50 bg-[#0c0e16]/95 backdrop-blur-xl">
        <div className="flex h-16 items-center justify-between px-6 md:px-10">
          <div className="flex items-center gap-4">
            <Link to="/" className="flex items-center gap-2">
              <Shield className="h-6 w-6 text-blue-500" />
              <span className="text-xl font-bold text-white">SecureSight</span>
            </Link>
            <Badge variant="outline" className="border-blue-500/50 bg-blue-500/10 text-blue-400">
              <Sparkles className="mr-1 h-3 w-3" />
              Premium
            </Badge>
          </div>

          <div className="flex items-center gap-4">
            <Button
              variant="outline"
              size="icon"
              className="border-gray-700/50 bg-gray-800/30 text-gray-300 hover:bg-gray-700/50 hover:text-white"
            >
              <Search className="h-4 w-4" />
              <span className="sr-only">Search</span>
            </Button>

            <Button
              variant="outline"
              size="icon"
              className="border-gray-700/50 bg-gray-800/30 text-gray-300 hover:bg-gray-700/50 hover:text-white"
            >
              <Bell className="h-4 w-4" />
              <span className="sr-only">Notifications</span>
            </Button>

            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" className="relative h-8 w-8 rounded-full">
                  <Avatar className="h-8 w-8 ring-2 ring-blue-500/20">
                    <AvatarImage src="/placeholder.svg?height=32&width=32" alt="User" />
                    <AvatarFallback className="bg-gradient-to-br from-blue-500 to-purple-600 text-white font-semibold">
                      {user?.name
                        ?.split(" ")
                        .map((n) => n[0])
                        .join("") || "US"}
                    </AvatarFallback>
                  </Avatar>
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent
                className="w-56 bg-[#13151f]/95 backdrop-blur-xl border-gray-800/50 text-white"
                align="end"
                forceMount
              >
                <DropdownMenuLabel className="font-normal">
                  <div className="flex flex-col space-y-1">
                    <p className="text-sm font-medium leading-none">{user?.name || "Loading..."}</p>
                    <p className="text-xs leading-none text-gray-400">{user?.username || ""}</p>
                  </div>
                </DropdownMenuLabel>
                <DropdownMenuSeparator className="bg-gray-800/50" />
                <DropdownMenuItem className="text-gray-300 hover:bg-gray-800/50 hover:text-white">
                  <User className="mr-2 h-4 w-4" />
                  <span>Profile</span>
                </DropdownMenuItem>
                <DropdownMenuItem className="text-gray-300 hover:bg-gray-800/50 hover:text-white">
                  <Shield className="mr-2 h-4 w-4" />
                  <span>Security</span>
                </DropdownMenuItem>
                <DropdownMenuSeparator className="bg-gray-800/50" />
                <DropdownMenuItem className="text-gray-300 hover:bg-gray-800/50 hover:text-white">
                <Button onClick={handleLogout} className="w-full text-left flex items-center gap-2">
                  <LogOut className="mr-2 h-4 w-4" />
                  <span>Log out</span>
                </Button>
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>
        </div>
      </header>

      <main className="flex-1 px-6 py-8 md:px-10">
        {/* Enhanced Welcome Section */}
        {user && (
          <div className="mb-12">
            <div className="relative overflow-hidden rounded-2xl bg-gradient-to-r from-blue-600/20 via-purple-600/20 to-blue-600/20 p-8 backdrop-blur-sm border border-blue-500/20">
              <div className="absolute inset-0 bg-gradient-to-r from-blue-600/10 to-purple-600/10 opacity-50" />
              <div className="relative">
                <h1 className="text-3xl font-bold text-white mb-2">
                  {getGreeting()},{" "}
                  <span className="bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
                    {user.name}
                  </span>
                  ! ðŸ‘‹
                </h1>
                <p className="text-gray-300 text-lg">
                  Ready to secure your digital world? Your verification tools are at your fingertips.
                </p>
              </div>
              <div className="absolute top-4 right-4 opacity-20">
                <Shield className="h-16 w-16 text-blue-400" />
              </div>
            </div>
          </div>
        )}

        <div className="mb-8">
          <h2 className="text-2xl font-bold text-white mb-2">Verification Tools</h2>
          <p className="text-gray-400">Choose a tool to start your security analysis</p>
        </div>

        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4 mb-12">
          {features.map((feature) => (
            <Card
              key={feature.id}
              className="group bg-[#13151f]/80 backdrop-blur-sm border-gray-800/50 text-white hover:border-gray-700/50 transition-all duration-300 hover:shadow-xl hover:shadow-blue-500/10"
            >
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between">
                  <div
                    className={`flex h-14 w-14 items-center justify-center rounded-xl ${feature.color} shadow-lg group-hover:scale-110 transition-transform duration-300`}
                  >
                    <feature.icon className="h-7 w-7 text-white" />
                  </div>
                  <Badge variant="outline" className="border-gray-700/50 bg-gray-800/30 text-gray-300 text-xs">
                    {feature.stats}
                  </Badge>
                </div>
                <CardTitle className="mt-4 text-xl group-hover:text-blue-400 transition-colors duration-300">
                  {feature.title}
                </CardTitle>
                <CardDescription className="text-gray-400 leading-relaxed">{feature.description}</CardDescription>
              </CardHeader>
              <CardFooter>
                <Button
                  asChild
                  className="w-full bg-gray-800/50 text-white hover:bg-gray-700/50 border border-gray-700/50 hover:border-gray-600/50 transition-all duration-300"
                >
                  <Link to={feature.path} className="flex items-center justify-between">
                    <span>Launch Tool</span>
                    <ChevronRight className="h-4 w-4 group-hover:translate-x-1 transition-transform duration-300" />
                  </Link>
                </Button>
              </CardFooter>
            </Card>
          ))}
        </div>

        {/* Enhanced Quick Actions - Now Full Width */}
        <Card className="bg-[#13151f]/80 backdrop-blur-sm border-gray-800/50 text-white">
          <CardHeader>
            <CardTitle className="flex items-center gap-3 text-xl">
              <div className="p-2 rounded-lg bg-gradient-to-br from-blue-500 to-purple-600">
                <Zap className="h-5 w-5 text-white" />
              </div>
              Quick Actions
            </CardTitle>
            <CardDescription className="text-gray-400">Fast access to common verification tasks</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="grid gap-4 sm:grid-cols-2 lg:grid-cols-4">
              <Button
                asChild
                variant="outline"
                className="group flex h-20 flex-col items-center justify-center gap-3 border-gray-700/50 bg-gray-800/30 p-4 text-gray-300 hover:bg-gray-700/50 hover:text-white hover:border-blue-500/50 transition-all duration-300"
              >
                <Link to="/solutions">
                  <FileCheck className="h-6 w-6 group-hover:text-blue-400 transition-colors duration-300" />
                  <span className="font-medium">Scan Document</span>
                </Link>
              </Button>
              <Button
                asChild
                variant="outline"
                className="group flex h-20 flex-col items-center justify-center gap-3 border-gray-700/50 bg-gray-800/30 p-4 text-gray-300 hover:bg-gray-700/50 hover:text-white hover:border-green-500/50 transition-all duration-300"
              >
                <Link to="/solutions">
                  <Globe className="h-6 w-6 group-hover:text-green-400 transition-colors duration-300" />
                  <span className="font-medium">Check URL</span>
                </Link>
              </Button>
              <Button
                asChild
                variant="outline"
                className="group flex h-20 flex-col items-center justify-center gap-3 border-gray-700/50 bg-gray-800/30 p-4 text-gray-300 hover:bg-gray-700/50 hover:text-white hover:border-red-500/50 transition-all duration-300"
              >
                <Link to="/solutions">
                  <Mail className="h-6 w-6 group-hover:text-red-400 transition-colors duration-300" />
                  <span className="font-medium">Verify Email</span>
                </Link>
              </Button>
              <Button
                asChild
                variant="outline"
                className="group flex h-20 flex-col items-center justify-center gap-3 border-gray-700/50 bg-gray-800/30 p-4 text-gray-300 hover:bg-gray-700/50 hover:text-white hover:border-purple-500/50 transition-all duration-300"
              >
                <Link to="/features/ai-content-detection">
                  <Bot className="h-6 w-6 group-hover:text-purple-400 transition-colors duration-300" />
                  <span className="font-medium">AI Check</span>
                </Link>
              </Button>
            </div>
          </CardContent>
        </Card>
      </main>

      <footer className="border-t border-gray-800/50 bg-[#0c0e16]/50 backdrop-blur-sm py-6 text-center text-sm text-gray-400">
        <p>Â© 2025 SecureSight by Arman Datt. All rights reserved.</p>
      </footer>
    </div>
  )
}

export default Dashboard

