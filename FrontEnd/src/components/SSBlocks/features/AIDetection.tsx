"use client"

import type React from "react"

import { useState } from "react"
import { Link } from "react-router-dom"
import { Bot, ArrowLeft, Sparkles, CheckCircle, Brain} from "lucide-react"

import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Textarea } from "@/components/ui/textarea"
import { Progress } from "@/components/ui/progress"
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import axios from "axios"
import { BACKEND_URL } from "@/config"
// import { Slider } from "@/components/ui/slider"

const AIDetection = () => {
  const [content, setContent] = useState("")
  const [isAnalyzing, setIsAnalyzing] = useState(false)
  const [analysisComplete, setAnalysisComplete] = useState(false)
  const [analysisProgress, setAnalysisProgress] = useState(0)
  const [analysisResult, setAnalysisResult] = useState<any>(null)
  // const [threshold, setThreshold] = useState([75])

  const handleAnalyze = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!content) return

    setIsAnalyzing(true)
    setAnalysisComplete(false)
    setAnalysisProgress(0)
    setAnalysisResult(null)

    // Simulate analysis progress
    const token = localStorage.getItem("token")
    if (!token) {
      return alert("You must be logged in to analyze content.")
    }
    console.log(content);
    const response = await axios.post(`${BACKEND_URL}/api/v1/verify/verifyAiGeneratedContent`, { content }, { headers: { Authorization: `${token}` } })

    if (response.status !== 200) {
      setIsAnalyzing(false)
      return alert("Error analyzing content. Please try again.")
    }

    const data_set = await response.data.AiTextAnalysis;
    if (response.status == 200) {
      setAnalysisResult(data_set);
    } else {
      console.error("Error fetching AI analysis:", response.statusText);
    }

    const interval = setInterval(() => {
      setAnalysisProgress((prev) => {
        if (prev >= 100) {
          clearInterval(interval)
          setIsAnalyzing(false)
          setAnalysisComplete(true)
          return 100
        }
        return prev + 10
      })
    }, 500)
  }

  function ConfidenceBadge({ confidence }: { confidence: number }) {
    let label = "";
    let bgColor = "";
    let textColor = "";

    if (confidence >= 75) {
      label = "High Confidence";
      bgColor = "bg-purple-500/20";
      textColor = "text-purple-500";
    } else if (confidence >= 50) {
      label = "Medium Confidence";
      bgColor = "bg-yellow-400/20";
      textColor = "text-yellow-400";
    } else {
      label = "Low Confidence";
      bgColor = "bg-red-500/20";
      textColor = "text-red-500";

    }
    return (
      console.log(confidence, label, bgColor, textColor),
      <div className={`flex items-center gap-2 rounded-full px-3 py-1 text-sm ${bgColor} ${textColor}`}>
        <span>{label}</span>
        <span className="font-bold">{confidence}%</span>
      </div>
    );

  }

  function ProgressBar({ value }: { value: number }) {
    return (<div className="h-4 rounded-full bg-gray-700">

      <div className="h-4 rounded-full bg-purple-500" style={{ width: `${value}%`}}></div>
    </div>)
    };

    return (
      <div className="flex min-h-screen flex-col bg-[#0c0e16]">
        <header className="border-b border-gray-800 bg-[#0c0e16]">
          <div className="flex h-16 items-center px-6 md:px-10">
            <Button asChild variant="ghost" className="mr-4 text-gray-300 hover:text-white">
              <Link to="/dashboard">
                <ArrowLeft className="mr-2 h-4 w-4" />
                Back to Dashboard
              </Link>
            </Button>
            <div className="flex items-center gap-2">
              <Bot className="h-5 w-5 text-purple-500" />
              <h1 className="text-xl font-bold text-white">AI Content Detection</h1>
            </div>
          </div>
        </header>

        <main className="flex-1 px-6 py-8 md:px-10">
          <Card className="mx-auto max-w-3xl bg-[#13151f] text-white">
            <CardHeader>
              <CardTitle>AI Content Detector</CardTitle>
              <CardDescription className="text-gray-400">
                Identify content generated by AI tools like ChatGPT, Bard, and other language models
              </CardDescription>
            </CardHeader>
            <CardContent>
              <form onSubmit={handleAnalyze} className="space-y-4">
                <div className="flex flex-col gap-2">
                  <label htmlFor="content" className="text-sm font-medium text-gray-300">
                    Paste Text to Analyze
                  </label>
                  <Textarea
                    id="content"
                    placeholder="Paste the text you want to analyze for AI-generated content..."
                    value={content}
                    onChange={(e) => setContent(e.target.value)}
                    rows={8}
                    className="border-gray-700 bg-[#1c1f2e] text-white"
                  />
                </div>

                {/* <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <label htmlFor="threshold" className="text-sm font-medium text-gray-300">
                    Detection Threshold
                  </label>
                  <span className="text-sm text-gray-400">{threshold[0]}%</span>
                </div>
                <Slider
                  id="threshold"
                  min={50}
                  max={95}
                  step={5}
                  value={threshold}
                  onValueChange={setThreshold}
                  className="py-2"
                />
                <p className="text-xs text-gray-500">
                  Higher threshold means fewer false positives but may miss some AI content
                </p>
              </div> */}

                <Button
                  type="submit"
                  disabled={isAnalyzing || !content}
                  className="bg-purple-500 text-white hover:bg-purple-600"
                >
                  {isAnalyzing ? "Analyzing..." : "Analyze Content"}
                  <Sparkles className="ml-2 h-4 w-4" />
                </Button>
              </form>

              {isAnalyzing && (
                <div className="mt-6 space-y-2">
                  <div className="flex items-center justify-between text-sm">
                    <span>Analyzing content...</span>
                    <span>{analysisProgress}%</span>
                  </div>
                  <Progress value={analysisProgress} className="h-2 bg-gray-700" indicatorClassName="bg-purple-500" />
                </div>
              )}

              {analysisComplete && (
                <div className="mt-6 space-y-4">
                  <Alert className="border-purple-500/20 bg-purple-500/10">
                    <Bot className="h-4 w-4 text-purple-500" />
                    {analysisResult?.is_ai_generated ? (
                      <AlertTitle className="text-purple-500 ">AI Content Detected</AlertTitle>
                    ) : (
                      <AlertTitle className="text-green-500">Human Content Detected</AlertTitle>
                    )}
                    {analysisResult?.is_ai_generated ? (
                      <AlertDescription className="text-purple-500 ">This content was likely generated by an AI language model.</AlertDescription>
                    ) : (
                      <AlertTitle className="text-green-500">This content was likely Written by human.</AlertTitle>
                    )}
                    {/* <AlertTitle className="text-purple-500">AI-Generated Content Detected</AlertTitle> */}
                    <AlertDescription className="text-gray-300">

                    </AlertDescription>
                  </Alert>

                  <Tabs defaultValue="results" className="w-full">
                    <TabsList className="grid w-full grid-cols-2 bg-[#1c1f2e]">
                      <TabsTrigger value="results">Results</TabsTrigger>
                      <TabsTrigger value="analysis">Analysis</TabsTrigger>
                      {/* <TabsTrigger value="models">AI Models</TabsTrigger> */}
                    </TabsList>
                    <TabsContent value="results" className="mt-4 space-y-4">
                      <div className="rounded-lg bg-[#1c1f2e] p-4">
                        <div className="mb-4 flex items-center justify-between">
                          <h3 className="text-lg font-medium">AI Probability</h3>
                          <ConfidenceBadge confidence={analysisResult?.Confidence ?? 0} />
                        </div>
                        <ProgressBar value={analysisResult?.Confidence ?? 0} />
                        <div className="mt-2 flex justify-between text-xs text-gray-400">
                          <span>0%</span>
                          <span>50%</span>
                          <span>100%</span>
                        </div>
                      </div>

                      <div className="grid gap-4 md:grid-cols-2">
                        <div className="rounded-lg bg-[#1c1f2e] p-4">
                          <div className="flex items-center gap-2">
                            <div className="rounded-full bg-purple-500/20 p-2">
                              <Bot className="h-4 w-4 text-purple-500" />
                            </div>
                            <h3 className="font-medium">AI Content</h3>
                          </div>
                          <div className="mt-3 text-center">
                            <span className="text-3xl font-bold text-purple-500">{analysisResult?.Confidence ?? 0}</span>
                            <p className="mt-1 text-sm text-gray-400">{analysisResult?.is_ai_generated}</p>
                          </div>
                        </div>

                        <div className="rounded-lg bg-[#1c1f2e] p-4">
                          <div className="flex items-center gap-2">
                            <div className="rounded-full bg-green-500/20 p-2">
                              <Brain className="h-4 w-4 text-green-500" />
                            </div>
                            <h3 className="font-medium">Human Content</h3>
                          </div>
                          <div className="mt-3 text-center">
                            <span className="text-3xl font-bold text-green-500">{analysisResult?.humanContentConfidence}</span>
                            <p className="mt-1 text-sm text-gray-400">{analysisResult?.humanContent}</p>
                          </div>
                        </div>
                      </div>
                    </TabsContent>

                    <TabsContent value="analysis" className="mt-4">
                      <div className="rounded-lg bg-[#1c1f2e] p-4">
                        <h3 className="mb-3 text-lg font-medium">Content Analysis</h3>
                        <div className="space-y-4">
                          {analysisResult?.is_ai_generated ? (<div>
                            <h4 className="mb-2 font-medium text-white">AI Indicators</h4>
                            <ul className="space-y-2 text-sm text-gray-300">
                              <li className="flex items-start gap-2">
                                <CheckCircle className="mt-0.5 h-4 w-4 text-purple-500" />
                                <span>{analysisResult?.reason}</span>
                              </li>
                              <li className="flex items-start gap-2">
                                <CheckCircle className="mt-0.5 h-4 w-4 text-purple-500" />
                                <span>Predictable sentence structures and transitions</span>
                              </li>
                              <li className="flex items-start gap-2">
                                <CheckCircle className="mt-0.5 h-4 w-4 text-purple-500" />
                                <span>Lack of personal anecdotes or unique perspectives</span>
                              </li>
                              <li className="flex items-start gap-2">
                                <CheckCircle className="mt-0.5 h-4 w-4 text-purple-500" />
                                <span>Generic examples and explanations</span>
                              </li>
                            </ul>
                          </div>) : (
                            <div>
                              <h4 className="mb-2 font-medium text-white">Human Indicators</h4>
                              <ul className="space-y-2 text-sm text-gray-300">
                                <li className="flex items-start gap-2">
                                  <CheckCircle className="mt-0.5 h-4 w-4 text-green-500" />
                                  <span>Unique insights and personal anecdotes</span>
                                </li>
                                <li className="flex items-start gap-2">
                                  <CheckCircle className="mt-0.5 h-4 w-4 text-green-500" />
                                  <span>{analysisResult?.humanContentReason}</span>
                                </li>
                                <li className="flex items-start gap-2">
                                  <CheckCircle className="mt-0.5 h-4 w-4 text-green-500" />
                                  <span>Emotional tone and subjective opinions</span>
                                </li>
                              </ul>
                            </div>
                          )}


                        </div>
                      </div>
                    </TabsContent>

                    {/* <TabsContent value="models" className="mt-4">
                      <div className="rounded-lg bg-[#1c1f2e] p-4">
                        <h3 className="mb-3 text-lg font-medium">Detected AI Models</h3>
                        <p className="mb-4 text-sm text-gray-400">
                          Our system can identify content from various AI language models with different confidence
                          levels.
                        </p>
                        <div className="space-y-3">
                          <div className="flex items-center justify-between rounded bg-[#0c0e16] p-3">
                            <div className="flex items-center gap-2">
                              <Zap className="h-4 w-4 text-purple-500" />
                              <span className="font-medium">GPT-4</span>
                            </div>
                            <div className="text-sm text-purple-500">87% match</div>
                          </div>
                          <div className="flex items-center justify-between rounded bg-[#0c0e16] p-3">
                            <div className="flex items-center gap-2">
                              <Zap className="h-4 w-4 text-purple-500" />
                              <span className="font-medium">ChatGPT (GPT-3.5)</span>
                            </div>
                            <div className="text-sm text-purple-500">92% match</div>
                          </div>
                          <div className="flex items-center justify-between rounded bg-[#0c0e16] p-3">
                            <div className="flex items-center gap-2">
                              <Zap className="h-4 w-4 text-purple-500" />
                              <span className="font-medium">Google Bard</span>
                            </div>
                            <div className="text-sm text-purple-500">64% match</div>
                          </div>
                          <div className="flex items-center justify-between rounded bg-[#0c0e16] p-3">
                            <div className="flex items-center gap-2">
                              <Zap className="h-4 w-4 text-purple-500" />
                              <span className="font-medium">Claude</span>
                            </div>
                            <div className="text-sm text-purple-500">58% match</div>
                          </div>
                        </div>
                      </div>
                    </TabsContent> */}
                  </Tabs>
                </div>
              )}
            </CardContent>
            <CardFooter className="flex flex-col items-start border-t border-gray-800 text-sm text-gray-400">
              <p>
                Our AI detection engine uses advanced machine learning to identify content generated by various AI models.
              </p>
              <p className="mt-2">
                For document plagiarism checks, try our{" "}
                <Link to="/verify-documents" className="text-blue-400 hover:underline">
                  Document Verification
                </Link>{" "}
                tool.
              </p>
            </CardFooter>
          </Card>
        </main>

        <footer className="border-t border-gray-800 py-6 text-center text-sm text-gray-400">
          <p>© 2025 SecureSight. All rights reserved.</p>
        </footer>
      </div>
    )
  }

  export default AIDetection

